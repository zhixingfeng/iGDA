//
//  test_ssw.cpp
//  iGDA
//
//  Created by Zhixing Feng on 17/11/28.
//  Copyright © 2017年 Zhixing Feng. All rights reserved.
//

#include "../include/catch.hpp"
#include "../include/headers.h"
#include "../src/misc/io.h"
#include "../src/misc/basic.h"
#include "../src/modules/assemble/assembler.h"
#include "../src/modules/alignment/alignment.h"
#include "../tools/tools.h"
#include <ctime>


static void PrintAlignment(const StripedSmithWaterman::Alignment& alignment){
    cout << "===== SSW result =====" << endl;
    cout << "Best Smith-Waterman score:\t" << alignment.sw_score << endl
    << "Next-best Smith-Waterman score:\t" << alignment.sw_score_next_best << endl
    << "Reference start:\t" << alignment.ref_begin << endl
    << "Reference end:\t" << alignment.ref_end << endl
    << "Query start:\t" << alignment.query_begin << endl
    << "Query end:\t" << alignment.query_end << endl
    << "Next-best reference end:\t" << alignment.ref_end_next_best << endl
    << "Number of mismatches:\t" << alignment.mismatches << endl
    << "Cigar: " << alignment.cigar_string << endl;
    cout << "======================" << endl;
}


TEST_CASE("test ssw", "[hide]")
{
    const string query = "AAACCCCGTACCGCCACATCTTCAACAACTGCTGCGCGGCTGTACCGCGTCCTGACGGTGCGCACGCCGAGTTTCTGGTAGAGGTTGCGCGATATGCCGTCTTATGGTGTCGCGCCACCGCCAGTTCGCCGCAATCTGTTCGTTGCTGTACCGAATAGATAAGCCTAACACCTGCCCATTCACGCTGGTGAGCGGGCTGGTGCGAAATAAGCTCCGGGAATCCGGATGGTAAGCAGGCGCTCGGACGAAGCTTCGTCAAAATGGGGCGAATTTATGCGTGATGTTGGTTAATCTCTCCGCAGGATGCCGCTGCGCGCGATGCTGCTCCATCTCCGGCAGCGTATTGAGCTGGGTAAGCTTGACGCAATTGTTGCGCCACTGGCTTCTGCCTTCAATTCACAAAATGGGCTGATAAATCCGGTGCGGTTGCGAAGCTGGTAAGGCATCAAGCAATACGCGCTGGGACGTCGTTTTTTTCCGCCCGATGTGCCAAGTAAAGCTGATGGAGTAACAGCAGATTTGCGGTTAAATCGCTCATTAAGCGCAGCCTACGGCATTCTCATTTAACTCTTCAGCACGATTTCCGCAGGCTCGAATTCGCCCAGCAGGATCTGCGCGCGGCGATATTCCGCATTGCCCTTGCAGAAAATGGTTATTGGCAAACCCCGGTTTTGGGCGTATGACGTAACCAGTTTGCGGCCGGTTTTTTGTCGCCGTTAAATACAGCAACAATCACACCGTAAACTTTATCGCGTTAGAGATTCCAGTCGCAGTGATAACGGCCATTGCCTAATAATTTTTCCAGTCGGTTAAGCTGACTACGGGATTATCCCAGGATCGCCCGCGCGCCGCTGGGCACTGCACCAGTAACGTCAGGCACCGCAAACTGTTGTTTGCGGGGAAGGTGACGCACAGCGATATCGCTGCGCCCGGGACCTCCGCTTCGTTCAAGCGCGCCCACGCCCACAGCAATTGCGCGCGGATTACGTACAGAAACTCATGCATCGGCAGTGTTCCAAGATGCTGCTCCTTTTGATCAATGGAAGGCTCTCTCCTGCGTTTTCCCATGCGGCCTGCAGAATCGCCCTGGCGAACTGAATTTCCGCTTGTTGAATTAAGCTCCA";
    const string ref = "AAACCCCGTACCCCATCATCTTCAGCAACTGCTGCGCGTGCTGTACCGCGTCCTGACGGTGCGCGACGCCGAGTTTCTGGTAGAGGTTGCGGATATGCGTCTTAATGGTGGTCGCGGCCACCGCCAGTTCGCCGGCAATCTGTTCGTTGCTGTAACCGGAATAGATAAGCCCTAACACCTGCCATTCACGCTGGGTGAGCGGGCTGGTGCGAATAAGCTCCGGGACATCCGGATGGTTAAGCAGGCGCTCGACGAAGCCTTCGTCAAAATGGGCGAATTTATGCCGGTGATGTTGGTTAATCTCTCGCAGGATGCGCTGCGCGCGATGCTGCTCCATCTCCGGCAGCGTATTGAGCTGGATAAGCTGACGCAATTGTTGCGCCATGGCTTCGCCTTCAATCACAAAATGGCTGATAAATCCGGTGCGGTTGGCGAGCTGTAAGGCATCAAGCAATACGCGCTGGGCGTCGTTTTTCCGCCCGGATTGCCAGTAAAGCTGATTGAGTAACAGCAGATTGCGGTTTAAATCGCTCATTAAGCGCAGGCTACGGGCATTCTCATTTAACTCTTCCAGCACGATTTCCGCAGGCTCGAATTCGCCCAGCAGGATCTGCGCGCGGGCGATATTCCGCCATTGCCCTTGCAGAAAATGGTTATTGGCAAACGCCGGTTTGGGCGTATGACGTAACCAGTTGGCGGCGGATTTTTTGTCGCCGGTTAACTGCCAGTAAATGACACGCACCTTATCGGCGTTAGAGATCCAGTCGCAGTGATAACGGCCATTGCCTAATAAATTTTCCAGTCGGTTAAGCTGACTACGGGCATTATCCAGATCGCCGCGCGCCAGCGAGCACTGCACCAGTAACGTCAGGCACTGCAACTGTTGTTGCGGCTGGAAGGTGGACAGCACAGCGATACCGCTGCGCGCCGAGGCCTCCGCTTCGTCAAGGCGCGCCCACGCCCACAGCAATTGCGCGCGGATACGTACCAGAAACTCATGCATCGGCAGTTGTTCCAGATGTTGCTCTTTGATCAACTGGAAGGCTCTCTCCTGCGTTTCCCATGCGGCCTGCAGGAATCCCTGGGCGAACTGAATTTCGCTTTGTTGAATTAAGCTCCA";
    int32_t maskLen = (int)strlen(query.c_str())/2;
    //maskLen = maskLen < 15 ? 15 : maskLen;
    maskLen = 1;
    //const string ref   = "CCGTTTATCGCA";
    //const string query = "CCTTTTATCGCA";
    
    // Declares a default Aligner
    StripedSmithWaterman::Aligner aligner(5, 6, 5, 5);

    // Declares a default filter
    StripedSmithWaterman::Filter filter;
    // Declares an alignment that stores the result
    StripedSmithWaterman::Alignment alignment;
    // Aligns the query to the ref
    clock_t time_begin = clock();
    aligner.Align(query.c_str(), ref.c_str(), (int)ref.size(), filter, &alignment, maskLen);
    clock_t time_end = clock();
    cout << "time elapse: " << double(time_end - time_begin) / CLOCKS_PER_SEC << endl;
    PrintAlignment(alignment);

}


TEST_CASE("test Alignment::local_align()", "[hide]")
{
    const string query = "AAACCCCGTACCGCCACATCTTCAACAACTGCTGCGCGGCTGTACCGCGTCCTGACGGTGCGCACGCCGAGTTTCTGGTAGAGGTTGCGCGATATGCCGTCTTATGGTGTCGCGCCACCGCCAGTTCGCCGCAATCTGTTCGTTGCTGTACCGAATAGATAAGCCTAACACCTGCCCATTCACGCTGGTGAGCGGGCTGGTGCGAAATAAGCTCCGGGAATCCGGATGGTAAGCAGGCGCTCGGACGAAGCTTCGTCAAAATGGGGCGAATTTATGCGTGATGTTGGTTAATCTCTCCGCAGGATGCCGCTGCGCGCGATGCTGCTCCATCTCCGGCAGCGTATTGAGCTGGGTAAGCTTGACGCAATTGTTGCGCCACTGGCTTCTGCCTTCAATTCACAAAATGGGCTGATAAATCCGGTGCGGTTGCGAAGCTGGTAAGGCATCAAGCAATACGCGCTGGGACGTCGTTTTTTTCCGCCCGATGTGCCAAGTAAAGCTGATGGAGTAACAGCAGATTTGCGGTTAAATCGCTCATTAAGCGCAGCCTACGGCATTCTCATTTAACTCTTCAGCACGATTTCCGCAGGCTCGAATTCGCCCAGCAGGATCTGCGCGCGGCGATATTCCGCATTGCCCTTGCAGAAAATGGTTATTGGCAAACCCCGGTTTTGGGCGTATGACGTAACCAGTTTGCGGCCGGTTTTTTGTCGCCGTTAAATACAGCAACAATCACACCGTAAACTTTATCGCGTTAGAGATTCCAGTCGCAGTGATAACGGCCATTGCCTAATAATTTTTCCAGTCGGTTAAGCTGACTACGGGATTATCCCAGGATCGCCCGCGCGCCGCTGGGCACTGCACCAGTAACGTCAGGCACCGCAAACTGTTGTTTGCGGGGAAGGTGACGCACAGCGATATCGCTGCGCCCGGGACCTCCGCTTCGTTCAAGCGCGCCCACGCCCACAGCAATTGCGCGCGGATTACGTACAGAAACTCATGCATCGGCAGTGTTCCAAGATGCTGCTCCTTTTGATCAATGGAAGGCTCTCTCCTGCGTTTTCCCATGCGGCCTGCAGAATCGCCCTGGCGAACTGAATTTCCGCTTGTTGAATTAAGCTCCA";
    const string ref = "AAACCCCGTACCCCATCATCTTCAGCAACTGCTGCGCGTGCTGTACCGCGTCCTGACGGTGCGCGACGCCGAGTTTCTGGTAGAGGTTGCGGATATGCGTCTTAATGGTGGTCGCGGCCACCGCCAGTTCGCCGGCAATCTGTTCGTTGCTGTAACCGGAATAGATAAGCCCTAACACCTGCCATTCACGCTGGGTGAGCGGGCTGGTGCGAATAAGCTCCGGGACATCCGGATGGTTAAGCAGGCGCTCGACGAAGCCTTCGTCAAAATGGGCGAATTTATGCCGGTGATGTTGGTTAATCTCTCGCAGGATGCGCTGCGCGCGATGCTGCTCCATCTCCGGCAGCGTATTGAGCTGGATAAGCTGACGCAATTGTTGCGCCATGGCTTCGCCTTCAATCACAAAATGGCTGATAAATCCGGTGCGGTTGGCGAGCTGTAAGGCATCAAGCAATACGCGCTGGGCGTCGTTTTTCCGCCCGGATTGCCAGTAAAGCTGATTGAGTAACAGCAGATTGCGGTTTAAATCGCTCATTAAGCGCAGGCTACGGGCATTCTCATTTAACTCTTCCAGCACGATTTCCGCAGGCTCGAATTCGCCCAGCAGGATCTGCGCGCGGGCGATATTCCGCCATTGCCCTTGCAGAAAATGGTTATTGGCAAACGCCGGTTTGGGCGTATGACGTAACCAGTTGGCGGCGGATTTTTTGTCGCCGGTTAACTGCCAGTAAATGACACGCACCTTATCGGCGTTAGAGATCCAGTCGCAGTGATAACGGCCATTGCCTAATAAATTTTCCAGTCGGTTAAGCTGACTACGGGCATTATCCAGATCGCCGCGCGCCAGCGAGCACTGCACCAGTAACGTCAGGCACTGCAACTGTTGTTGCGGCTGGAAGGTGGACAGCACAGCGATACCGCTGCGCGCCGAGGCCTCCGCTTCGTCAAGGCGCGCCCACGCCCACAGCAATTGCGCGCGGATACGTACCAGAAACTCATGCATCGGCAGTTGTTCCAGATGTTGCTCTTTGATCAACTGGAAGGCTCTCTCCTGCGTTTCCCATGCGGCCTGCAGGAATCCCTGGGCGAACTGAATTTCGCTTTGTTGAATTAAGCTCCA";

    StripedSmithWaterman::Alignment result;
    Alignment aligner;
    aligner.local_align(query, ref, result);
    PrintAlignment(result);
    
}

